{{- if .Comment }}
/** {{ escapeComment .Comment }} */
{{- end }}
sealed class {{ .Name }} {
{{- range $prop := .Properties }}
{{- if $prop.Abstract }}
    {{- if $prop.Comment }}
    /** {{ escapeComment $prop.Comment }} */
    {{- end }}
    abstract val {{ $prop.Name }}: {{ $prop.Type }}{{ if $prop.Nullable }}?{{ end }}

{{- end }}
{{- end }}
    abstract val _jsonElement: {{ if $.SerializeToObject }}JsonObject{{ else }}JsonElement{{ end }}

{{- range $index, $subclass := .Subclasses }}
{{- if or $index (len $.Properties) }}
{{ end }}
    {{- if $subclass.Comment }}
    /** {{ escapeComment $subclass.Comment }} */
    {{- end }}
    {{ if $subclass.IsDataClass }}data {{ end }}class {{ $subclass.Name }}{{- if $subclass.Properties }}(
    {{- range $propIndex, $prop := $subclass.Properties }}{{- if $propIndex }},
{{ end }}
        {{- if $prop.Comment }}
        /** {{ escapeComment $prop.Comment }} */
        {{- end }}
        {{ if $prop.Override }}override {{ end }}val {{ $prop.Name }}: {{ $prop.Type }}{{ if $prop.Nullable }}?{{ end }}{{ if $prop.Default }} = {{ $prop.Default }}{{ end }}
    {{- end }}
    ){{- else }}(){{ end }} : {{ $.Name }}() {
    {{- range $prop := $subclass.BodyProperties }}
        {{- if ne $prop.Name "_jsonElement" }}
        {{- if $prop.Comment }}
        /** {{ escapeComment $prop.Comment }} */
        {{- end }}
        {{ if $prop.Override }}override {{ end }}val {{ $prop.Name }}: {{ $prop.Type }}{{ if $prop.Nullable }}?{{ end }}{{ if $prop.Default }} = {{ $prop.Default }}{{ end }}
        {{- end }}
    {{- end }}
{{- $hasJsonElementOverride := false }}
{{- range $prop := $subclass.BodyProperties }}
    {{- if eq $prop.Name "_jsonElement" }}
        {{- $hasJsonElementOverride = true }}
    {{- end }}
{{- end }}
{{- if $hasJsonElementOverride }}
    {{- range $prop := $subclass.BodyProperties }}
        {{- if eq $prop.Name "_jsonElement" }}

        {{ if $prop.Override }}override {{ end }}val {{ $prop.Name }}: {{ $prop.Type }} = {{ $prop.Default }}
        {{- end }}
    {{- end }}
{{- else }}
        override val _jsonElement: {{ if $.SerializeToObject }}JsonObject{{ else }}JsonElement{{ end }} = buildJsonObject {
        {{- range $subclass.Properties }}
            {{- if .Nullable }}
            {{ .Name }}?.let { put("{{ .SerialName }}", it.rudderSerialize()) }
            {{- else }}
            put("{{ .SerialName }}", {{ .Name }}.rudderSerialize())
            {{- end }}
        {{- end }}
        {{- range $subclass.BodyProperties }}
            {{- if ne .Name "_jsonElement" }}
            put("{{ .SerialName }}", {{ .Name }}.rudderSerialize())
            {{- end }}
        {{- end }}
        }
{{- end }}
    }
{{- end }}
}

fun {{ .Name }}.rudderSerialize(): {{ if .SerializeToObject }}JsonObject{{ else }}JsonElement{{ end }} = this._jsonElement
@JvmName("rudderSerializeList{{ .Name }}")
fun List<{{ .Name }}>.rudderSerialize(): JsonArray = JsonArray(this.map { it.rudderSerialize() })